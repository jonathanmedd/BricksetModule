trigger:
  batch: true
  branches:
    include:
      - "*"
  tags:
    include:
      - "v*"

  paths:
    include:
      - src/*
      # - tests/*
      - tools/*
      - azure-pipelines.yml

pr: none

pool:
  vmImage: windows-latest

stages:
  - stage: CI
    jobs:
    - job: BuildModule
      steps:
        - task: gitversion/setup@0
          displayName: Install GitVersion
          inputs:
            versionSpec: '5.x'

        - task: gitversion/execute@0
          displayName: Determine Version
          inputs:
            useConfigFile: true
            configFilePath: 'GitVersion.yml'

        - task: PowerShell@2
          displayName: 'Execute Build'
          inputs:
            filePath: tools/build.ps1
            arguments: -Task BuildWithTests
            pwsh: true

        - task: PublishTestResults@2
          displayName: 'Publish Test Results'
          inputs:
            testResultsFormat: NUnit
            testResultsFiles: 'tools\testResults.xml'
          continueOnError: true

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: $(System.DefaultWorkingDirectory)/Release
            artifactName: Release

        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: $(System.DefaultWorkingDirectory)/tools
            artifactName: Tools


  - stage: Release
    dependsOn: CI
    condition: succeeded('CI')
    jobs:
    - job: Test
      condition: eq(variables['Build.SourceBranch'], 'refs/heads/feature/implement-azure-devops')
      steps:
        - task: DownloadPipelineArtifact@2
          displayName: Restore Pipeline Artifacts

        - task: PowerShell@2
          displayName: 'Publish Module'
          inputs:
            filePath: $(Pipeline.Workspace)/Tools/Publish-PSModule.ps1
            arguments: -ApiKey $(PSTestGalleryApiKey) -Path "$(Pipeline.Workspace)/Release/Brickset" -CheckForExistingVersion -PreRelease
            pwsh: true

  #   - job: Production
  #     condition: startswith(variables['Build.SourceBranch'], 'refs/tags/v')
  #     steps:
  #       - task: DownloadPipelineArtifact@2
  #         displayName: Restore Pipeline Artifacts

  #       - task: PowerShell@1
  #         displayName: 'Publish Module'
  #         inputs:
  #           scriptName: $(Pipeline.Workspace)/Tools/Publish-PSModule.ps1
  #           arguments: -ApiKey $(PSGalleryApiKey) -Path "$(Pipeline.Workspace)/Release/PowervRA" -CheckForExistingVersion

  #       - task: GitHubRelease@1
  #         displayName: 'GitHub Release'
  #         inputs:
  #           gitHubConnection: 'JakkuLabs'
  #           title: PowervRA
  #           assets: "$(Pipeline.Workspace)/Release/PowervRA.$(Build.BuildNumber).zip"
